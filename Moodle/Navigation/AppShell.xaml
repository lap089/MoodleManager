<Page
    x:Class="MoodleManager.Navigation.AppShell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MoodleManager.Navigation"
    xmlns:usercontrols ="using:MoodleManager.Navigation.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="NavPaneItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="MinWidth" Value="{StaticResource SplitViewCompactPaneThemeLength}"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <DataTemplate x:Key="NavPaneItemTemplate" x:DataType="local:NavPaneItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center"
                          ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid  RequestedTheme="Dark">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <usercontrols:PageHeader Grid.Row="0" Grid.ColumnSpan="2"  
                                 x:Name="pageHeader"
                             >
        </usercontrols:PageHeader>

        <SplitView x:Name="navPane"
                   DisplayMode="CompactOverlay"
                   IsPaneOpen="False"
                   PaneBackground="{ThemeResource NavigationPaneThemeBrush}"
                   IsTabStop="False"
                   OpenPaneLength="256"
                   CompactPaneLength="48"
                   Grid.Row="1" Grid.Column="0">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- A custom ListView to display the items in the pane.  The automation Name is set in the ContainerContentChanging event. -->
                    <local:NavPaneListView
                        x:Name="NavPaneList"
                        TabIndex="3"
                        ItemContainerStyle="{StaticResource NavPaneItemContainerStyle}"
                        ItemTemplate="{StaticResource NavPaneItemTemplate}" ItemInvoked="NavPaneItemInvoked"
                        />

                    <!-- Dummy --> 
                    <!--<StackPanel Orientation="Horizontal" Grid.Row="1" Margin="12,24,24,12"  is
                                IsTapEnabled="True" Tapped="StackPanel_Tapped" >
                        <SymbolIcon Symbol="Setting" Foreground="White" Width="24" Height="24"/>
                        <TextBlock Text="Settings" Margin="16,0,0,0" VerticalAlignment="Center" Foreground="White"/>
                    </StackPanel>-->
                </Grid>
            </SplitView.Pane>

            <Frame x:Name="frame" 
                   RequestedTheme="Light"
                   Navigating="OnNavigatingToPage" 
                   Navigated="OnNavigatedToPage">
                <Frame.ContentTransitions>
                    <TransitionCollection>
                        <NavigationThemeTransition>
                            <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                <EntranceNavigationTransitionInfo/>
                            </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                        </NavigationThemeTransition>
                    </TransitionCollection>
                </Frame.ContentTransitions>

                <!-- Move these to another page -->
            </Frame>

        </SplitView>

       
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="WideLayoutTrigger" MinWindowWidth="1600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="navPane.IsPaneOpen" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>
